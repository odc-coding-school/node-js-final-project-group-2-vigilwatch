<!DOCTYPE html>

<html class="h-full bg-white" lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Real Time Chat Using Node.js</title>
  <link href="/css/output.css" rel="stylesheet" />
  <link rel="stylesheet" href="./css/custom.css" />
</head>

<body class="h-full dark:bg-gray-800 dark:text-white-500">
  <div class="absolute top-0 right-0 pt-4 pr-4">
    <%- include('partials/darkModeButton.ejs') %>
  </div>
  <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">

    <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
      <div class="sm:mx-auto sm:w-full sm:max-w-sm"> 
        <h2 class="mt-0 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900 dark:text-white flex items-center justify-center">
          <img src="/res/chat-line-dark.svg" id="chat-icon" alt="Chat Icon" class=" dark:hidden w-6 h-6 mr-2" />
          <img src="/res/chat-line.svg" id="chat-icon" alt="Chat Icon" class=" hidden dark:block w-6 h-6 mr-2" />
         Real Time Chat Using Node.js
        </h2>
    </div>
      <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
        <form class="space-y-6" action="/chat">
          <div>
            <label for="username"
              class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-200">Username <span id="username-status"></span></label>
            <div class="mt-2">
              <input id="username" name="username" type="text" required
                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-700 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-orange-600 sm:text-sm sm:leading-6 dark:bg-gray-700 dark:text-white" />
            </div>
          </div>
          <div>
            <label for="room" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-200">Room</label>
            <div class="mt-2">
              <select name="room"
                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-orange-600 sm:text-sm sm:leading-6 dark:ring-gray-700 dark:bg-gray-700 dark:text-white"
                required>
                <option value="alpha">Alpha</option>
                <option value="beta">Beta</option>
                <option value="gamma">Gamma</option>
                <option value="delta">Delta</option>
                <option value="epsilon">Epsilon</option>
                <option value="zeta">Zeta</option>
                <option value="eta">Eta</option>
                <option value="theta">Theta</option>
                <option value="iota">Iota</option>
                <option value="kappa">Kappa</option>
              </select>
            </div>
          </div>

          <div>
            <button id="join-btn" type="submit"
              class="flex w-full disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-orange-600 justify-center rounded-md bg-orange-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-orange-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-orange-600">
              Join Room
            </button>
 
          </div>
        </form>
      </div>
    </div><script src="/socket.io/socket.io.js"></script>
    <script src="/js/darkMode.js"></script>
    <script>
      const socket = io();
      const usernameInput = document.getElementById('username');
      const usernameStatus = document.getElementById('username-status');
      const joinButton = document.getElementById('join-btn');
      
      usernameInput.addEventListener('input', () => {
          const username = usernameInput.value; 
          
          if (username) {
              socket.emit('checkUsername', { username } );
          } else {
              usernameStatus.textContent = '';
              joinButton.disabled = true;
          }
      });

      socket.on('usernameCheckResult', (isTaken) => {
          if (isTaken) {
              usernameStatus.textContent = ' is taken';
              usernameStatus.style.color = 'orange';
              joinButton.disabled = true;
          } else {
              usernameStatus.textContent = ' is available';
              usernameStatus.style.color = 'green';
              joinButton.disabled = false;
          }
      });

  </script>
</body>

</html>
